{"version":3,"sources":["components/ContactFrom/ContactFrom.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","shared/components/FormInput/FormInput.module.css","redux/selectors.js","redux/actions.js","redux/operations.js","shared/components/FormInput/FormInput.jsx","components/ContactFrom/fields.js","components/ContactFrom/ContactFrom.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/PhonebookPage/PhoneBookPage.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","phonebook","filter","getContacts","contacts","filteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","actions","axios","defaults","baseURL","dispatch","get","then","data","catch","error","number","post","id","delete","FormInput","classname","props","className","styles","searchField","defaultProps","required","placeholder","type","value","onChange","fields","ContactFrom","handleChange","e","target","setState","handleSubmit","preventDefault","find","item","onSubmit","reset","alert","nameFieldId","v4","numberFieldId","this","form","formInput","htmlFor","formField","Component","connect","operations","Filter","filterFieldId","inputField","input","ContactListItem","onClick","contactListItem","btn","contactElements","map","PhonebookPage","fetchContacts","loading","App","PhoneBookPage","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65982d8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFrom_form__1FTiq\",\"formInput\":\"ContactFrom_formInput__uvetx\",\"formField\":\"ContactFrom_formField__adwmr\",\"errorMessage\":\"ContactFrom_errorMessage__21Ni7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Filter_inputField__2xgV2\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2urGF\",\"btn\":\"ContactListItem_btn__2d1l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"FormInput_searchField__1vQV9\"};","import { createSelector } from '@reduxjs/toolkit'\n\nexport const loading = ({ phonebook }) => phonebook.loading;\n\nexport const getFilter = (state) => state.phonebook.filter;\n\nexport const getContacts = (state) => state.phonebook.contacts;\n\nexport const filteredContacts = createSelector(\n    [getFilter, getContacts],\n    (filter, contacts) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    }\n)\n\n// export const filteredContacts = (state) => {\n//     const contacts = getContacts(state);\n//     const filter = getFilter(state);\n\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n// }\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError')\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst filterContacts = createAction('contacts/add');\n\nexport default { addContactRequest, addContactSuccess, addContactError, filterContacts, deleteContactRequest, deleteContactSuccess, deleteContactError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError };","import axios from 'axios';\nimport actions from './actions'\n\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } = actions;\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest())\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => dispatch(fetchContactsError(error)))\n}\n\nconst addContact = (name, number) => dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest())\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n}\n\nconst deleteContact = id => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error)))\n}\n\n\nexport default { fetchContacts, addContact, deleteContact };","import React from 'react'\nimport PropTypes from 'prop-types';\nimport typeOptions from './typeOptions'\n\nimport styles from './FormInput.module.css'\n\nconst FormInput = ({ classname, ...props }) => {\n    return (<>\n        <input className={`${styles.searchField} ${classname}`} {...props} />\n    </>);\n}\n\nFormInput.defaultProps = {\n    required: false,\n    placeholder: '',\n    name: '',\n    className: '',\n    type: 'text',\n    value: '',\n    onChange: () => { }\n}\n\nFormInput.propTypes = {\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(typeOptions),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default FormInput;","export const fields = {\n    name: {\n        type: 'text',\n        value: '',\n        name: 'name',\n        required: true,\n    },\n    number: {\n        type: 'text',\n        value: '',\n        name: 'number',\n        required: true,\n    }\n}","import { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getContacts } from '../../redux/selectors'\nimport operations from '../../redux/operations'\nimport FormInput from '../../shared/components/FormInput'\nimport { fields } from './fields';\nimport { v4 } from 'uuid'\n\nimport styles from './ContactFrom.module.css'\n\nclass ContactFrom extends Component {\n\n    state = {\n        name: \"\",\n        number: \"\",\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = this.props.contacts.find(item => item.name === name || item.number === number)\n        if (!contact) {\n            this.props.onSubmit(name, number)\n            this.reset()\n            return\n        }\n        alert(`${name} is already in contacts`)\n        this.reset()\n\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n        const nameFieldId = v4();\n        const numberFieldId = v4();\n        const { name, number } = this.state;\n        const { handleChange, handleSubmit } = this;\n        return (\n            <>\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <div className={styles.formInput}>\n                        <label htmlFor={nameFieldId}>Name</label>\n                        <FormInput onChange={handleChange} {...fields.name} value={name} className={styles.formField} />\n                        <label htmlFor={numberFieldId}>Number</label>\n                        <FormInput onChange={handleChange} {...fields.number} value={number} className={styles.formField} />\n                    </div>\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    contacts: getContacts(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFrom);","import React from 'react';\nimport { v4 } from 'uuid';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport actions from '../../redux/actions'\nimport { getFilter } from '../../redux/selectors'\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, onChange }) => {\n\n    const filterFieldId = v4();\n    return (\n        <div className={styles.inputField}>\n            <label htmlFor={filterFieldId}>Find contacts by name</label>\n            <input\n                className={styles.input}\n                id={filterFieldId}\n                type=\"text\"\n                value={filter}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    filter: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.filterContacts(e.target.value))\n})\n\nFilter.defaultProps = {\n    filter: '',\n    onChange: () => { }\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem = ({ name, number, onClick }) => {\n    return (\n        <li className={styles.contactListItem}>\n            <p>{name}: {number}</p>\n            <button className={styles.btn} type=\"button\" onClick={onClick}>Delete</button>\n        </li>\n    );\n}\n\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\nexport default ContactListItem;","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem'\nimport operations from '../../redux/operations'\nimport { filteredContacts } from '../../redux/selectors'\n\nconst ContactList = ({ contacts, onClick }) => {\n    const contactElements = contacts.map(({ id, ...props }) => <ContactListItem key={id} {...props} onClick={() => onClick(id)} />)\n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    }).isRequired)\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: filteredContacts(state)\n})\n\nconst mapDispatchToPtops = dispatch => ({\n    onClick: (id) => dispatch(operations.deleteContact(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(ContactList);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ContactForm from '../../components/ContactFrom'\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList'\nimport operations from '../../redux/operations'\nimport { loading } from '../../redux/selectors'\n\nclass PhonebookPage extends Component {\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm />\n\n                <h2>Contacts</h2>\n                <Filter />\n\n                {this.props.loading && <h1>...Loading</h1>}\n                <ContactList />\n            </div>\n        )\n    }\n}\n\nconst mapStateToPtops = state => ({\n    loading: loading(state)\n})\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(operations.fetchContacts())\n})\n\nexport default connect(mapStateToPtops, mapDispatchToProps)(PhonebookPage);","import React from 'react';\n\nimport PhoneBookPage from './pages/PhonebookPage'\n\nconst App = () => {\n    return (<>\n        <PhoneBookPage />\n    </>\n    );\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './actions';\n\nconst contacts = createReducer([], {\n    [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n    [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n    [actions.deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n})\n\nconst loading = createReducer(false, {\n    [actions.fetchContactsRequest]: () => true,\n    [actions.fetchContactsSuccess]: () => false,\n    [actions.fetchContactsError]: () => false,\n    [actions.addContactRequest]: () => true,\n    [actions.addContactSuccess]: () => false,\n    [actions.addContactError]: () => false,\n    [actions.deleteContactRequest]: () => true,\n    [actions.deleteContactSuccess]: () => false,\n    [actions.deleteContactError]: () => false,\n})\n\nconst filter = createReducer('', {\n    [actions.filterContacts]: (_, { payload }) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n    loading,\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger'\nimport reducer from './reducer'\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}), logger];\n\nconst store = configureStore({\n    reducer: {\n        phonebook: reducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}